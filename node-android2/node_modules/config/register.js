var crypto = require('crypto');
var rand = require('csprng');
var mongoose = require('mongoose');
var user = require('config/models');
exports.register = function(email,password,phno,callback) {
var x = email;
 var lastAtPos = x.lastIndexOf('@');
 var lastDotPos = x.lastIndexOf('.');
 var result=(lastAtPos < lastDotPos && lastAtPos > 0 && x.indexOf('@@') == -1 && lastDotPos > 2 && (x.length - lastDotPos) > 2 && phno.length==10 );
if(result){
if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && password.length > 4 && password.match(/[0-9]/) && password.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)) {
var temp =rand(160, 36);
var newpass = temp + password;
var token = crypto.createHash('sha512').update(email +rand).digest("hex");
var hashed_password = crypto.createHash('sha512').update(newpass).digest("hex");
var newuser = new user({
  token: token,
  email: email,
  phno: phno,
  hashed_password: hashed_password,
  salt :temp });
user.find({email: email},function(err,users){
var len = users.length;
if(len == 0){
  newuser.save(function (err) {
  callback({'response':"Sucessfully Registered"});
});
}else{
  callback({'response':"Email is already registered"});
}});}else{
  callback({'response':"Weak password"});
}}else{
  callback({'response':"Invalid E-mail or Mobile number"});
}
}
